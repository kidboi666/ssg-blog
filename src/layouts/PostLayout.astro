---
import PostTableOfContents from "@components/PostTableOfContents.astro";
import Layout from "./Layout.astro";
import { getEntry } from "astro:content";

const { frontmatter } = Astro.props;
const { slug } = Astro.params;

const post: any = await getEntry(frontmatter.category, slug);
const { headings } = await post.render(post);
---

<Layout headings={headings}>
  <div class="flex w-full flex-col xl:flex-row xl:justify-center">
    <PostTableOfContents headings={headings} />
    <div class="'w-full">
      <div class="my-8 w-full max-w-[752px] px-8">
        <h1 class="text-5xl font-semibold text-zinc-700 dark:text-zinc-200">
          {frontmatter.title}
        </h1>
        <p class="ml-px mt-2 text-sm text-zinc-500">
          등록일 : {new Date(frontmatter.pubDate).toLocaleDateString()}
        </p>
      </div>
      <div class="mt-8 w-full border-b border-zinc-200 dark:border-zinc-800">
      </div>
      <section class="post my-8 w-full max-w-[752px] px-8">
        <slot />
      </section>
    </div>
  </div>
</Layout>
<!-- 
<script is:inline>
  const navLinks = document.querySelectorAll(".heading");

  navLinks.addEventListener("DOMContentLoaded", () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        const targetId = entry.target.id;

        // 현재 화면에 보이는 섹션만 활성화
        if (entry.isIntersecting) {
          navLinks.forEach((link) => {
            link.classList.toggle(
              "active",
              link.getAttribute("href") === `#${targetId}`,
            );
          });
        }
      });
    });
    // 모든 섹션을 관찰
    document.getElementsByTagName("h1").forEach((section) => {
      observer.observe(section);
    });
  });
</script> -->
